/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'com.proteus.java-application-conventions'
    id 'antlr'
    id 'java'
}

application {
    // Define the main class for the application.
    mainClass = 'com.proteus.la.app.Runner'
}

configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}


//this is to pass the command line  args 
run {
    enableAssertions = true
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':framework')
    implementation 'org.apache.commons:commons-text'
    antlr "org.antlr:antlr4:4.7.1"
    compile "org.antlr:antlr4-runtime:4.7.1"
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:1.7.25'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:31.1-jre'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    implementation 'org.apache.poi:poi:3.7'
    // https://mvnrepository.com/artifact/com.beust/jcommander
    implementation 'com.beust:jcommander:1.69'
}

task AddExtendedContextToParseRule(type: JavaExec) {
    //classpath = sourceSets.main.runtimeClasspath
    classpath = sourceSets.main.compileClasspath
    mainClass = 'com.proteus.framework.AddExtendedContextToParseRule'
    File file = new File(projectDir, 'src/main/antlr/com/proteus/la/ANTLRv4/LAParser.g4')
    // arguments to pass to the application
    args file.getAbsolutePath()
}

task makeDirs{
    mustRunAfter clean
    File antlrDir = new File(projectDir, 'build/generated-src/antlr/main/com/proteus/la/ANTLRv4')
    antlrDir.mkdirs()
    File extClassesDir = new File(projectDir, 'build/generated-src/st/main/com/proteus/la')
    extClassesDir.mkdirs()
}

generateGrammarSource {
    dependsOn makeDirs
    File file = new File(projectDir, 'build/generated-src/antlr/main/com/proteus/la/ANTLRv4')
    arguments += ['-lib', file.getAbsolutePath(), '-visitor', '-listener']
}

task GenerateExtendedContextVisitor(type: JavaExec) {
    classpath = sourceSets.main.compileClasspath
    mainClass = 'com.proteus.framework.ExtendedContextVisitorGenerator'
    File grammarFile = new File(projectDir, 'src/main/antlr/com/proteus/la/ANTLRv4/LAParser.g4')
    File templateFile = new File(projectDir, 'src/main/resources/ClassContext.stg')
    File directoryLocation = new File(projectDir, 'build/generated-src/st/main/com/proteus/la')  //framework  expects the file to be here.
    // arguments to pass to the application
    args = [grammarFile.getAbsolutePath(), templateFile.getAbsolutePath(), directoryLocation.getAbsolutePath(), 'com.proteus.la', 'la', 'LAParser']
}

task GeneratePopulateExtendedContextVisitor(type: JavaExec) {
    classpath = sourceSets.main.compileClasspath
    mainClass = 'com.proteus.framework.PopulateExtendedContextVisitorGenerator'
    File grammarFile = new File(projectDir, 'src/main/antlr/com/proteus/la/ANTLRv4/LAParser.g4')
    File templateFile = new File(projectDir, 'src/main/resources/ClassContext.stg')
    File directoryLocation = new File(projectDir, 'build/generated-src/st/main/com/proteus/la')  //framework  expects the file to be here.
    // arguments to pass to the application
    args = [grammarFile.getAbsolutePath(), templateFile.getAbsolutePath(), directoryLocation.getAbsolutePath(), 'com.proteus.la', 'la', 'LAParser']
}


task GenerateExtendedClasses(type: JavaExec) {
    classpath = sourceSets.main.compileClasspath
    mainClass = 'com.proteus.framework.ExtendedContextClassGenerator'
    File grammarFile = new File(projectDir, 'src/main/antlr/com/proteus/la/ANTLRv4/LAParser.g4')
    File templateFile = new File(projectDir, 'src/main/resources/ClassContext.stg')
    File directoryLocation = new File(projectDir, 'build/generated-src/st/main/com/proteus/la')
    // arguments to pass to the application
    args = ['com.proteus.la', 'la', 'LAParser', 'LALexer', grammarFile.getAbsolutePath(), templateFile.getAbsolutePath(), directoryLocation.getAbsolutePath()]
}

sourceSets.main.java.srcDirs += ['build/generated-src/antlr/main/', 'build/generated-src/st/main']


